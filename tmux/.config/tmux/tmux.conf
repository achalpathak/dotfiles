###### PLUGINS ######
set -g @plugin 'aserowy/tmux.nvim'
set -g @plugin 'omerxx/tmux-sessionx'
set -g @plugin 'dreamsofcode-io/catppuccin-tmux'
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'catppuccin/tmux'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'omerxx/tmux-floax'

set -g @sessionx-bind 's'
set -g @floax-bind '/'


set -g mouse on

#set true color
set-option -sa terminal-overrides ",xterm*:Tc"

# Status
set -g status-interval 1

# start numbering from 1 not 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

# set -g detach-on-destroy off     # don't exit from tmux when closing a session
set -g history-limit 30000
set -g detach-on-destroy on     # don't exit from tmux when closing a session
set -g escape-time 0             # zero-out escape time delay
set -g set-clipboard on          # use system clipboard
set -g status-position top       # macOS / darwin style
set -g pane-active-border-style 'fg=magenta,bg=default'
set -g pane-border-style 'fg=brightblack,bg=default'
# set -g @yank_selection_mouse 'clipboard' #keep this disabled otherwise infinite mouse select issue will come

# window format
set -g @catppuccin_window_left_separator "█"
set -g @catppuccin_window_right_separator "█ "
set -g @catppuccin_window_number_position "left"
set -g @catppuccin_window_middle_separator " "
set -g @catppuccin_window_status_enable "yes"
set -g @catppuccin_window_status_icon_enable "yes"

# window default format
set -g @catppuccin_window_default_fill "none"
set -g @catppuccin_window_default_text "#( echo \#{pane_current_path} | sed \"s|$HOME|~|\" | xargs basename )"

# window current format
set -g @catppuccin_window_current_fill "all"
set -g @catppuccin_window_current_text "#( echo \#{pane_current_path} | sed \"s|$HOME|~|\" )"
set -g @catppuccin_status_right_separator_inverse "no"
set -g @catppuccin_status_fill "icon"
set -g @catppuccin_directory_text "#{b:pane_current_path}"
set -g @catppuccin_window_default_fill "number"
set -g @catppuccin_window_default_text "#W"
set -g @catppuccin_window_current_fill "number"
set -g @catppuccin_window_current_text "#W#{?window_zoomed_flag,(),}"

set -g @catppuccin_status_modules_right "application session date_time"
set -g @catppuccin_status_connect_separator "yes"

is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# Kill pane
bind x killp

#set prefix
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix


#set vi-mode
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
unbind -T copy-mode-vi MouseDragEnd1Pane

unbind r
bind r source-file ~/.config/tmux/tmux.conf

#to maximize
bind -r m resize-pane -Z

unbind %
unbind '"'
bind '-' split-window -v -c "#{pane_current_path}"
bind '|' split-window -h -c "#{pane_current_path}"


# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# Use Alt-arrow keys without prefix key to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Swap windows
bind-key -n C-M-Left swap-window -t -1\; select-window -t -1
bind-key -n C-M-Right swap-window -t +1\; select-window -t +1


set -g @catppuccin_window_status_icon_enable "yes"
set -g @catppuccin_flavour 'mocha'
set -g @resurrect-capture-pane-contents 'on'
# set -g @continuum-restore 'on'


# config for date_time module
set -g @catppuccin_date_time_text "%d-%h-%Y %I:%M:%S %p"
# set -g @catppuccin_window_left_separator ""
# set -g @catppuccin_window_right_separator " "

# bootstrap tpm
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

run '~/.tmux/plugins/tpm/tpm'
